try:
	import marshal,lzma,gzip,bz2,binascii,zlib;exec(marshal.loads(binascii.a2b_base64(b'\n')))
except KeyboardInterrupt:
	exit()
